# docker-compose.yml

version: "2"
services:
  ms-minio:
    container_name: ms-minio
    restart: always
    image: minio/minio:RELEASE.2021-03-26T00-00-41Z
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
      MINIO_SECRET_KEY: $MINIO_SECRET_KEY
    command: server /export
    volumes:
      - ../../src/MediaStudio.Minio/data:/export
      - ../../src/MediaStudio.Minio/config:/root/.minio  
      
  ms-postgres:
    container_name: ms-postgres
    image: postgres:13.3
    environment:
      POSTGRES_DB: $POSTGRES_DB_NAME
      POSTGRES_USER: $POSTGRES_DB_USER
      POSTGRES_PASSWORD: $POSTGRES_DB_PASS
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../../src/MediaStudio.Postgres/InitDatabase:/docker-entrypoint-initdb.d
      - ../../src/MediaStudio.Postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
      
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ../../src/MediaStudio.Postgres/PgAdmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - ms-postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 0.2G
 
  mediastudio:
    container_name: mediastudio
    build:
      context: ../../src/
      dockerfile: ../docker/MediaStudio.Dockerfile
    ports:
      - "8081:8081"
    restart: always
    depends_on:
      - ms-postgres
      
  mediastudiocms:
    container_name: mediastudiocms
    build:
      context: ../../src/
      dockerfile: ../docker/MediaStudio.CMS.Dockerfile
    ports:
      - "8082:8082"
    restart: always
    depends_on:
      - ms-postgres